import osc.standard
import osc.robotics

action wait_for_sim:
    # Wait for simulation to become active
    world_name: string = 'default'      # simulation world name

action actor_exists:
    # report success if an actor with a specific name exists
    entity_name: string                 # name of the actor within simulation
    world_name: string = 'default'      # simulation world name

action osc_object.spawn:
    # Spawn a simulation entity, uses namespace of entity
    spawn_pose: pose_3d                 # position at which the object gets spawned
    world_name: string = 'default'      # simulation world name
    model: string                       # model definition
    xacro_arguments: string = ''        # comma-separated list of argument key:=value pairs

action osc_object.delete:
    # Delete an actor from simulation
    world_name: string = 'default'      # simulation world name
