import osc.standard.base
import osc.robotics

enum move_group_type: [
    arm,                                  # Use the arm group to execute moveit action
    gripper                               # Use the gripper group to execute moveit action
]

###########
# Actor
###########

actor arm inherits robot:
    namespace: string = ''                # Namespace for the arm
    arm_joints: list of string            # List of joint names for the arm joints
    gripper_joints: list of string        # List of joint names for the gripper joints
    arm_group: string                     # Name of the move group controlling the arm joints
    gripper_group: string                 # Name of the move group controlling the gripper joints
    end_effector: string                  # Name of the end effector component (e.g., hand or tool)
    base_link: string                     # Name of the robot's base link for reference in kinematics


###########
# Actions
###########

action arm.move_to_joint_pose:
    # Use Moveit2 to move the arm joints to specified joint positions
    goal_pose: list of string            # list joint positions to move to
    move_group: move_group_type          # move group type (arm, gripper)
    plan_only: bool = false              # If true, the plan is calculated but not executed. The calculated plan can be visualized in RViz.
    replan: bool = true                  # if true, replan if plan becomes invalidated during execution
    tolerance: float = 0.001             # the acceptable range of variation around both the start and goal positions.
    max_velocity_scaling_factor: float = 0.1 # Scaling factors for optionally reducing the maximum joint velocities
    namespace_override: string = ''      # if set, it's used as namespace (instead of the associated actor's name)
    action_topic: string = 'move_action' # Name of action
    success_on_acceptance: bool = false  # succeed on goal acceptance

action arm.move_to_pose:
    # Use moveit2 to move the end-effector to specified position
    goal_pose: pose_3d                   # end effector pose to move to
    plan_only: bool = false              # If true, the plan is calculated but not executed. The calculated plan can then be visualized in RViz.
    replan: bool = true                  # if true, replan if plan becomes invalidated during execution
    tolerance: float = 0.001             # the acceptable range of variation around both the start and goal positions.
    max_velocity_scaling_factor: float = 0.1 # Scaling factors for optionally reducing the maximum joint velocities
    namespace_override: string = ''      # if set, it's used as namespace (instead of the associated actor's name)
    action_topic: string = 'move_action' # Name of action
    success_on_acceptance: bool = false  # succeed on goal acceptance