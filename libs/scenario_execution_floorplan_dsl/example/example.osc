import osc.helpers
import osc.floorplan_dsl
import osc.ros
import osc.nav2
import osc.x11

scenario test:
    timeout(120s)
    floorplan_gen: floorplan_generator
    robot: differential_drive_robot
    goal_poses: string

    do serial:
        floorplan_gen.generate_floorplan(file_path: "minimal.floorplan")        
        floorplan_gen.generate_gazebo_world("world.sdf.xacro", [key_value("mesh_file", floorplan_gen.generated_floorplan_mesh_path)])
        capture_screen() with:
            running_is_success()
        ros_launch('tb4_sim_scenario', 'sim_nav_scenario_launch.py', [ 
            key_value(key: 'scenario_execution', value: 'False'),
            key_value(key: 'scenario', value: 'NA'),
            key_value(key: 'world', value: floorplan_gen.generated_gazebo_world_path),
            key_value(key: 'map', value: floorplan_gen.generated_floorplan_map_path),
            key_value('x', '0.7'),
            key_value('y', '9.8'),
            key_value('rviz_config_file', './config.rviz')],
            replace_relative_paths_in_args: true,
            wait_for_shutdown: false)
        robot.init_nav2(initial_pose: pose_3d(position: position_3d(x: 0.7m, y: 9.8m)))
        robot.nav_through_poses(floorplan_gen.goal_poses)
        # [
        #     pose_3d(position_3d(x: 4.3m, y: 9.8m)),
        #     pose_3d(position_3d(x: 4.3m, y: 0.7m)),
        #     pose_3d(position_3d(x: 0.7m, y: 0.7m))
        # ])



#   - {id: hallway-point-0, x: 0.7, y: 9.8, yaw: 0, z: 0}
#   - {id: hallway-point-1, x: 4.3, y: 9.8, yaw: 0, z: 0}
#   - {id: hallway-point-2, x: 4.3, y: -0.7, yaw: 0, z: 0}
#   - {id: hallway-point-3, x: 0.7, y: -0.7, yaw: 0, z: 0}
