import osc.ros

scenario test_ros_service_call_blocking:
    do parallel:
        test: serial:
            service_call() with:
                keep(it.service_name == '/bla_service')
                keep(it.service_type == 'std_srvs.srv.SetBool')
                keep(it.data == '{\"data\": True}')
            wait elapsed(10s)
            emit end
        test2: serial:
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 0}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 1}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 2}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 3}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 4}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 5}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 6}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 7}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 8}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 9}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 10}')
            wait elapsed(1s)
            topic_publish() with:
                keep(it.topic_name == '/bla')
                keep(it.topic_type == 'std_msgs.msg.Int32')
                keep(it.value == '{\"data\": 11}')
        time_out: serial:
            wait_for_30s: wait elapsed(30s)
            time_out_shutdown: emit fail
