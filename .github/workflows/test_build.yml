---
name: test-build
on:
  # Triggers the workflow on push or pull request events but
  # only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  REPOSITORY_LOWERCASE: intellabs
jobs:
  build-and-push:
    runs-on: intellabs-01
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d #v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 #v3.0.0
      - name: Build and push Docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 #v5.0.0
        with:
          context: .
          file: .github/workflows/Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPOSITORY_LOWERCASE }}/scenario-execution:humble
  # run-tests:
  #   needs: [build-and-push]
  #   runs-on: intellabs-01
  #   container:
  #     image: ghcr.io/intellabs/scenario-execution:humble
  #     credentials:
  #       username: ${{ github.repository_owner }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
  #       with:
  #         submodules: true
  #     - name: Build
  #       shell: bash
  #       run: |
  #         source /opt/ros/humble/setup.bash
  #         colcon build --continue-on-error
  #         source install/setup.bash
  #     - name: Test
  #       shell: bash
  #       run: |
  #         source /opt/ros/humble/setup.bash
  #         source install/setup.bash
  #         export -n CYCLONEDDS_URI
  #         export ROS_DOMAIN_ID=2
  #         colcon test --packages-select \
  #         scenario_execution \
  #         scenario_execution_ros \
  #         scenario_execution_gazebo \
  #         scenario_coverage \
  #         --event-handlers console_direct+ \
  #         --return-code-on-test-failure \
  #         --pytest-args \
  #         --junit-xml=TEST.xml
  #     - name: Publish Test Results
  #       uses: EnricoMi/publish-unit-test-result-action@f355d34d53ad4e7f506f699478db2dd71da9de5f #v2.15.1
  #       if: always()
  #       with:
  #         check_run: false
  #         files: |
  #           scenario_execution//TEST.xml
  #           scenario_execution_ros//TEST.xml
  #           scenario_execution_gazebo//TEST.xml
  #           scenario_coverage//TEST.xml      
  scenario-files-dry-run:
    needs: [build-and-push]
    runs-on: intellabs-01
    container:
      image: ghcr.io/intellabs/scenario-execution:humble
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          submodules: true
      - name: Build
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --continue-on-error
          source install/setup.bash
      - name: Test Scenario Files
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          source install/setup.bash
          find . -name "*.osc" | grep -Ev "lib_osc/*|examples/example_scenario_variation|scenario_coverage|fail*|install|build" | while read -r file; do 
            echo "$file"; 
            ros2 run scenario_execution scenario_execution "$file" -n; 
          done
  test-example-scenario:
    needs: [scenario-files-dry-run]
    runs-on: intellabs-01
    container:
      image: ghcr.io/intellabs/scenario-execution:humble
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          submodules: true
      - name: Build
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --continue-on-error
          source install/setup.bash
      - name: Test Example Scenario
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          source install/setup.bash
          #shellcheck disable=SC1083
          scenario_batch_execution -i examples/example_scenario/ -o test_example_scenario -- ros2 launch scenario_execution_ros scenario_launch.py scenario:={SCENARIO} output_dir:={OUTPUT_DIR}
      - name: Upload result
        uses: actions/upload-artifact@ef09cdac3e2d3e60d8ccadda691f4f1cec5035cb
        if: always()
        with:
          name: test-example-scenario-result
          path: test_example_scenario/test.xml
  test-example-library:
    needs: [scenario-files-dry-run]
    runs-on: intellabs-01
    container:
      image: ghcr.io/intellabs/scenario-execution:humble
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          submodules: true
      - name: Build
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --continue-on-error
          source install/setup.bash
      - name: Test Example Library
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          source install/setup.bash
          # shellcheck disable=SC1083
          scenario_batch_execution -i examples/example_library/scenarios -o test_example_library -- ros2 launch scenario_execution_ros scenario_launch.py scenario:={SCENARIO} output_dir:={OUTPUT_DIR}
      - name: Upload result
        uses: actions/upload-artifact@ef09cdac3e2d3e60d8ccadda691f4f1cec5035cb
        if: always()
        with:
          name: test-example-library-result
          path: test_example_library/test.xml
  test-example-variation:
    needs: [scenario-files-dry-run]
    runs-on: intellabs-01
    container:
      image: ghcr.io/intellabs/scenario-execution:humble
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          submodules: true
      - name: Build
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --continue-on-error
          source install/setup.bash
      - name: Test Example Variation
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          source install/setup.bash
          scenario_variation -o scenario_variation_out examples/example_scenario_variation/example_scenario_variation.osc
          # shellcheck disable=SC1083
          scenario_batch_execution -i scenario_variation_out -o test_example_variation -- ros2 launch scenario_execution_ros scenario_launch.py scenario:={SCENARIO} output_dir:={OUTPUT_DIR}
      - name: Upload result
        uses: actions/upload-artifact@ef09cdac3e2d3e60d8ccadda691f4f1cec5035cb
        if: always()
        with:
          name: test-example-variation-result
          path: test_example_variation/test.xml
  test-example-nav2:
    needs: [scenario-files-dry-run]
    runs-on: intellabs-01
    container:
      image: ghcr.io/intellabs/scenario-execution:humble
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          submodules: true
      - name: Build
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --continue-on-error
          source install/setup.bash
      - name: Test Example Nav2
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          source install/setup.bash
          Xvfb :1 -screen 0 800x600x16 &
          export DISPLAY=:1.0
          export -n CYCLONEDDS_URI
          export ROS_DOMAIN_ID=119
          export IGN_PARTITION=${HOSTNAME}:${GITHUB_RUN_ID}
          sed -i 's/60s/600s/g' examples/example_nav2/example_nav2.osc
          # shellcheck disable=SC1083
          scenario_batch_execution -i examples/example_nav2/ -o test_example_nav2 -- ros2 launch tb4_sim_scenario sim_nav_scenario_launch.py scenario:={SCENARIO} output_dir:={OUTPUT_DIR}
      - name: Upload result
        uses: actions/upload-artifact@ef09cdac3e2d3e60d8ccadda691f4f1cec5035cb
        if: always()
        with:
          name: test-example-nav2-result
          path: test_example_nav2/test.xml
  test-example-simulation:
    needs: [scenario-files-dry-run]
    runs-on: intellabs-01
    container:
      image: ghcr.io/intellabs/scenario-execution:humble
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          submodules: true
      - name: Build
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --continue-on-error
          source install/setup.bash
      - name: Test Example Simulation
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          source install/setup.bash
          Xvfb :1 -screen 0 800x600x16 &
          export DISPLAY=:1.0
          export -n CYCLONEDDS_URI
          export ROS_DOMAIN_ID=119
          export IGN_PARTITION=${HOSTNAME}:${GITHUB_RUN_ID}
          sed -i 's/120s/900s/g' examples/example_simulation/scenarios/example_simulation.osc
          # shellcheck disable=SC1083
          scenario_batch_execution -i examples/example_simulation/scenarios/ -o test_example_simulation -- ros2 launch tb4_sim_scenario sim_nav_scenario_launch.py scenario:={SCENARIO} output_dir:={OUTPUT_DIR}
      - name: Upload result
        uses: actions/upload-artifact@ef09cdac3e2d3e60d8ccadda691f4f1cec5035cb
        if: always()
        with:
          name: test-example-simulation-result
          path: test_example_simulation/test.xml
  test-example-multirobot:
    needs: [scenario-files-dry-run]
    runs-on: intellabs-01
    container:
      image: ghcr.io/intellabs/scenario-execution:humble
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          submodules: true
      - name: Build
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --continue-on-error
          source install/setup.bash
      - name: Test Example Multirobot
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          source install/setup.bash
          Xvfb :1 -screen 0 800x600x16 &
          export DISPLAY=:1.0
          export -n CYCLONEDDS_URI
          export ROS_DOMAIN_ID=119
          export IGN_PARTITION=${HOSTNAME}:${GITHUB_RUN_ID}
          sed -i 's/240s/1500s/g' examples/example_multi_robot/example_multi_robot.osc
          # shellcheck disable=SC1083
          scenario_batch_execution -i examples/example_multi_robot/ -o test_example_multirobot -- ros2 launch tb4_sim_scenario sim_nav_scenario_launch.py scenario:={SCENARIO} yaw:=3.14 output_dir:={OUTPUT_DIR}
      - name: Upload result
        uses: actions/upload-artifact@ef09cdac3e2d3e60d8ccadda691f4f1cec5035cb
        if: always()
        with:
          name: test-example-multirobot-result
          path: test_example_multirobot/test.xml
  publish-scenario-results:
    needs: [test-example-scenario, test-example-library, test-example-variation, test-example-nav2, test-example-simulation, test-example-multirobot]
    runs-on: intellabs-01
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@7a1cd3216ca9260cd8022db641d960b1db4d1be4 #v4.0
        with:
          path: downloaded-artifacts
      - name: Publish Scenario Results
        uses: EnricoMi/publish-unit-test-result-action@f355d34d53ad4e7f506f699478db2dd71da9de5f #v2.15.1
        if: always()
        with:
          check_name: Scenario Results
          check_run: false
          action_fail: true
          comment_mode: always
          files: |
            downloaded-artifacts/test-example-scenario-result/test.xml
            downloaded-artifacts/test-example-library-result/test.xml
            downloaded-artifacts/test-example-variation-result/test.xml
            downloaded-artifacts/test-example-nav2-result/test.xml
            downloaded-artifacts/test-example-simulation-result/test.xml
            downloaded-artifacts/test-example-multirobot-result/test.xml