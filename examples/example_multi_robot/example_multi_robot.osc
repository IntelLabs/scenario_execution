import osc.helpers
import osc.ros
import osc.gazebo

scenario multi_robot:
    timeout(240s)
    robot: differential_drive_robot
    robot2: osc_actor
    do serial:
        robot2.spawn(pose_3d(position_3d(x: -3.0, y: 1.5, z: 0.3), orientation_3d(yaw: -1.57)), model: 'example_multi_robot://models/robot.sdf')
        ros_launch("example_multi_robot", "robot2_launch.py", wait_for_shutdown: false)
        ros_launch("gazebo_static_camera", "spawn_static_camera_launch.py", [ key_value('x', '-3'), key_value('z', '10'), key_value('pitch', '1.57')], wait_for_shutdown: false)
        record_bag(['/tf', '/tf_static', '/scenario_execution/snapshots', '/map', '/static_camera/image_raw', '/local_costmap/costmap', '/initialpose'], use_sim_time: true)
        parallel:
            test_drive: serial:
                robot.init_nav2(initial_pose: pose_3d(orientation: orientation_3d(yaw: 3.14rad)))
                robot.nav_to_pose(goal_pose: pose_3d(position: position_3d(x: -4.0m), orientation: orientation_3d(yaw: 3.14rad)))
                emit end
            serial:
                topic_publish() with:
                    keep(it.topic_name == '/robot2/cmd_vel')
                    keep(it.topic_type == 'geometry_msgs.msg.Twist')
                    keep(it.value == '{\"linear\": {\"x\": 0.6, \"y\": 0.0, \"z\": 0.0}, \"angular\": {\"x\": 0.0, \"y\": 0.0, \"z\": 0.0}}')
