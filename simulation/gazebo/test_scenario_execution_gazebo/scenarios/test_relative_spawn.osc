import osc.ros
import osc.gazebo
import osc.helpers

scenario test_relative_spawn:
    robot: differential_drive_robot
    test_obstacle: osc_actor
    do parallel:
        serial:
            robot.init_nav2(pose_3d(position_3d(x: 0.0m, y: 0.0m)))
            parallel:
                robot.nav_to_pose(goal_pose: pose_3d(position: position_3d(x: -4.0m), orientation: orientation_3d(yaw: 3.14rad)))
                serial:
                    robot.tf_close_to(
                        reference_point: position_3d(x: -1.5m, y: 0.0m), 
                        threshold: 0.35m, 
                        robot_frame_id: 'turtlebot4_base_link_gt')
                    test_obstace.relative_spawn(
                        distance: random.get_float(0.5, 1.5, 42),
                        model: 'test_scenario_execution_gazebo://models/box.sdf')
                        world_name: 'maze')
            emit end
        time_out: serial:
            wait elapsed(120s)
            emit fail
