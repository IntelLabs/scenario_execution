import osc.gazebo

scenario test_spawn_and_exists:
        
    walking_human: amr_object with:
        keep(it.model == 'scenario_execution_gazebo://models/walking_human.sdf')
    walking_human_2: amr_object with:
        keep(it.model == 'scenario_execution_gazebo://models/walking_human.sdf')

    do parallel:
        spawn_walking_human: walking_human.spawn_and_move() with:
            keep(it.spawn_pose.position.x == 0m)
            keep(it.spawn_pose.position.y == 0m)
            keep(it.spawn_pose.position.z == 1m)
            keep(it.spawn_pose.orientation.roll == 0.0rad)
            keep(it.spawn_pose.orientation.pitch == 0.0rad)
            keep(it.spawn_pose.orientation.yaw == 3.14rad)
            keep(it.world_name == 'maze')
            keep(it.trajectory == '0 0 0 0.1 0,4 2 0 0.1 0,4.5 2 0 0.1 3.14,8.5 0 0 0.1 3.14,9 0 0 0.1 0')
        spawn_walking_human_2: walking_human_2.spawn_and_move() with:
            keep(it.spawn_pose.position.x == 0m)
            keep(it.spawn_pose.position.y == -7m)
            keep(it.spawn_pose.position.z == 1m)
            keep(it.spawn_pose.orientation.roll == 0.0rad)
            keep(it.spawn_pose.orientation.pitch == 0.0rad)
            keep(it.spawn_pose.orientation.yaw == 1.57rad)
            keep(it.world_name == 'maze')
            keep(it.trajectory == '0 0 0 0.1 0,4 2 0 0.1 0,4.5 2 0 0.1 3.14,8.5 0 0 0.1 3.14,9 0 0 0.1 0')
        test_case: serial:
            wait_for_5s: wait elapsed(5s)
            success: emit end
        time_out: serial:
            wait_for_30s: wait elapsed(30s)
            time_out_shutdown: emit fail
