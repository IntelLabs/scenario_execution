###############
# Dependencies
###############

import osc.ros
import osc.gazebo

#####################
# Example scenario
#####################

scenario spawn_obstacle:
    robot_1: differential_drive_robot with:
        keep(it.model == 'amr_simulation://robots/kobuki/pengo.urdf.xacro')
    beer_bottle: amr_object with:
        keep(it.model == 'amr_simulation://models/beer/model.sdf')
    event robot1_arrives
    do parallel:
        robot1_arrives_at_ref_pt: serial:
            robot_1_arrives: robot_1.close_to() with:
                keep(it.reference_point.x == 1.0m)
                keep(it.reference_point.y == 0.0m)
                keep(it.reference_point.z == 0.0m)
                keep(it.threshold == 0.3m) 
            emit_arrival: emit robot1_arrives
        spawn_obstacle: serial:
            wait_for_robot1_to_arrive: wait @spawn_obstacle.robot1_arrives
            wait_for_2s: wait elapsed(2s)
            spawn_beer_bottle: beer_bottle.spawn() with:
                keep(it.spawn_pose.position.x == 1.0m)
                keep(it.spawn_pose.position.y == -4.0m)
                keep(it.spawn_pose.position.z == 0.0m)
                keep(it.spawn_pose.orientation.roll == 0.0m)
                keep(it.spawn_pose.orientation.pitch == 0.0m)
                keep(it.spawn_pose.orientation.yaw == 0.0m)
            scenario_finished: emit end
        time_out: serial:
            wait_for_30s: wait elapsed(30s)
            time_out_shutdown: emit fail
