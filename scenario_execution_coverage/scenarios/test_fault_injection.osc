import osc.helpers
import osc.ros
import osc.nav2

scenario nav2_simulation_fault_injection:
    timeout(240s)
    robot: differential_drive_robot
    do serial:
        robot.init_nav2(pose_3d(position_3d(x: 0.0m, y: 0.0m)))
        bag_record(topics: ['/robot_pose_loc', '/robot_pose_gt', '/cmd_vel', '/amcl_pose', '/odom', '/tf', '/tf_static'], timestamp_suffix: false)
        noise: set_node_parameter(node_name: 'laserscan_modification',
                            parameter_name: 'gaussian_noise_std_deviation') with:
            keep(it.parameter_value in ['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])
        drop: set_node_parameter(node_name: 'laserscan_modification',
                            parameter_name: 'random_drop_percentage') with:
            keep(it.parameter_value in ['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])
        robot.nav_to_pose(pose_3d(position_3d(x: 3.0m, y: -3.0m)))
        robot.nav_to_pose(pose_3d(position_3d(x: 0.0m, y: 0.0m)))
        emit end
